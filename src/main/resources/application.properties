spring.profiles.active=${APP_SPRING_PROFILE:test}
#spring.profiles.active=test
spring.jpa.open-in-view=false

#---
spring.config.activate.on-profile=test
spring.jpa.defer-datasource-initialization=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#essa config abaixo mostra nos logs os comandos de SQL. Deixar false em caso de app em produção
spring.jpa.show-sql=false 

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
#---
spring.h2.console.enabled=false
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driverClassName = org.postgresql.Driver

#parte abaixo para criar o script de criação de banco 'create.sql'
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.hibernate.hbm2ddl.delimiter=;

spring.config.activate.on-profile=dev
spring.datasource.url=${DB_POSTGRES_LANCHE_URL_AZ}
spring.datasource.username=${DB_POSTGRES_LANCHE_USERNAME_AZ}
spring.datasource.password=${DB_POSTGRES_LANCHE_PASS_AZ}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
#---
spring.h2.console.enabled=false
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driverClassName = org.postgresql.Driver

spring.config.activate.on-profile=prod
spring.datasource.url=${DB_POSTGRES_LANCHE_URL_AZ}
spring.datasource.username=${DB_POSTGRES_LANCHE_USERNAME_AZ}
spring.datasource.password=${DB_POSTGRES_LANCHE_PASS_AZ}
 #postgres@db-lanches-prod
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false

